/*{
	"type": "action",
	"targets": ["omnifocus"],
	"author": "Otto Automator",
	"identifier": "com.omni-automation.of.export-custom-perspective",
	"version": "1.3",
	"description": "Exports the chosen custom perspective to file.",
	"label": "Export Custom Perspective",
	"shortLabel": "Export Perspective",
	"paletteLabel": "Export Perspective",
	"image": "arrow.down.doc"
}*/
(() => {
  var action = new PlugIn.Action(async function (_selection, _sender) {
    try {
      perspectives = new Array();
      perspectives = perspectives.concat(Perspective.Custom.all);
      perspectiveNames = perspectives.map((perspective) => {
        return perspective.name;
      });
      itemIndexes = new Array();
      perspectiveNames.forEach((name, index) => {
        itemIndexes.push(index);
      });

      perspectiveMenu = new Form.Field.Option("perspective", "Perspective", itemIndexes, perspectiveNames, 0);
      perspectiveMenu.allowsNull = false;

      inputForm = new Form();
      inputForm.addField(perspectiveMenu);
      formPrompt = "Custom perspective to export:";
      buttonTitle = "Continue";
      formObject = await inputForm.show(formPrompt, buttonTitle);

      chosenPerspective = perspectives[formObject.values["perspective"]];
      wrapper = chosenPerspective.fileWrapper();
      filesaver = new FileSaver();
      savedFileURL = await filesaver.show(wrapper);
    } catch (err) {
      if (!err.causedByUserCancelling) {
        new Alert(err.name, err.message).show();
      }
    }
  });

  action.validate = function (_selection, _sender) {
    return Perspective.Custom.all.length > 0;
  };

  return action;
})();
